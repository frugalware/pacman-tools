#!/bin/bash

# (c) 2005-2006 Miklos Vajna <vmiklos@frugalware.org>
# repoman for Frugalware
# distributed under GPL License

function usage()
{
	cat <<EOF
Usage: `basename $0` [global options] [command] [command options]

Commands:
cl|changelog [repository/]category/package  Generate a Changelog file.
c|clean [repository/]category/package  Delete a package.
del|delete file                             Delete a file from FST.
ls|list directory                           List a directory in FST.
up|upload source destination                Upload a file to FST.

Global options:
-v|--verbose  Give verbose output.
-h|--help     Show this help screen.
EOF
}

msg()
{
	echo -e "\033[1;32m==>\033[1;0m \033[1;1m$1\033[1;0m" >&2
}

delete()
{
	# Strip leading / and any ..
	file=`echo $1|sed 's|^/||;s|\.\./||g'`
	msg "Deleting file: $file"
	if [ "$verbose" != 0 ]; then
		rmopts="-v"
	fi
	ssh $lopts $host "cd $path_to_repo; if [ ! -e _darcs/freeze ]; then sudo -u $sudouser rm $rmopts $path_to_repo/$file; else echo \"The repo is freezed.\"; fi"
	
}

upload()
{
	if [ "$#" -le 0 ]; then
		echo "Too few parameters!"
		usage
		exit 1
	fi
	if [ -z "$2" ]; then
		dest="frugalware-`uname -m`"
	else
		# Strip leading / and any ..
		dest=`echo $2 |sed 's|^/||;s|\.\./||g'`
	fi
	src=$1
	if echo $1 |grep -q \.fpm$; then
		msg "Checking for permission"
		group=`LANG= LC_ALL= pacman -Qi -p $1 |grep ^Group|sed 's/.* : \([^ ]*\) .*/\1/'`
		if ! ssh $lopts $host "genchangelog --repo $reponame --check $group >/dev/null"; then
			echo "Permission denied"
			echo "If you think you should have permission, send a mail to"
			echo "frugalware-devel@frugalware.org, or edit \$fst/docs/xml/teams.xml via darcs."
			exit 1
		fi
		if ! LANG= LC_ALL= pacman -Qi -p $1 |grep -q "^Build Type.*chroot$"; then
			echo "$1 is not built in chroot. Remove the -H option"
			echo "from your makepkg commandline switches, rebuild your"
			echo "package and try again."
			exit 1
		fi
	fi
	name=`basename $src`
	msg "Requesting a temporary file"
	tmp=`ssh $lopts $host "cd $path_to_repo; if [ ! -e _darcs/freeze ]; then mktemp 2>/dev/null; fi"`
	if [ -z "$tmp" ]; then
		echo "The repo is freezed."
		exit 1
	fi
	msg "Uploading file: $src (to $tmp)"
	scp $src $cpopts$host:$tmp
	if echo "`sha1sum $src|sed 's/\(.*\)  .*/\1/'`  $tmp" |ssh $lopts $host sha1sum -c - >/dev/null 2>&1; then
		msg "Copying to $dest"
		ssh $lopts $host "chmod 644 $tmp; sudo -u vmiklos cp $tmp $path_to_repo/$dest/$name && rm $tmp"
	else
		echo "The uploaded file is corrupted :-/"
		ssh $lopts $host "rm $tmp"
		exit 1
	fi
}

list()
{
	msg "Fetching contents of directory: $1"
	dir=$1
	shift 1
	ssh $lopts $host "ls $* $path_to_repo/$dir"
}

split_group_pkgname()
{
	if echo $1 |grep -q '^[^/]\+/[^/]\+$'; then
		group=`echo $1 |sed 's|\([^/]\+\)/[^/]\+|\1|'`
		pkgname=`echo $1 |sed 's|[^/]\+/\([^/]\+\)|\1|'`
	else
		echo "Bad syntax!"
		usage
		exit 1
	fi
}

clean()
{
	msg "Cleaning up $1"
	split_group_pkgname $1
	[[ "$reponame" =~ "-current$" ]] && reposuffix="-current"
	ssh $lopts $host "cd $path_to_repo/frugalware-${arch:-`arch`} && arch=${arch:-`arch`} sudo -u $sudouser updatesync del frugalware$reposuffix.fdb $pkgname && genchangelog --repo $reponame --clean $pkgname"
}

changelog()
{
	msg "Generating Changelog for $1"
	split_group_pkgname $1
	[[ "$reponame" =~ "-current$" ]] && reposuffix="-current"
	if [ "$verbose" == 1 ]; then
		catcmd="cat Changelog"
	else
		# just a workaround for the "syntax error near unexpected token `;'" bug
		catcmd="echo -n \"\""
	fi
	ssh $lopts $host "cd $path_to_repo; if [ ! -e _darcs/rlock -a ! -e _darcs/freeze ]; then touch _darcs/rlock; cd frugalware-${arch:-`arch`}; arch=${arch:-`arch`} sudo -u $sudouser updatesync upd frugalware$reposuffix.fdb ../source/$group/$pkgname/FrugalBuild; cd $path_to_repo; rm _darcs/rlock; cd $path_to_repo/source/$group/$pkgname; arch=${arch:-`arch`} sudo -u $sudouser genchangelog --repo $reponame; $catcmd; else echo \"Couldn't get lock.\"; fi"
}

die()
{
	echo -e "$0: $*"
	exit 1
}

update()
{
	if [ ! "`type -p rsync`" ]; then
		die "The rsync program is missing. Please install it with pacman -S rsync."
	fi
	if [ -z "$1" ]; then
		repo=$reponame
	else
		repo=$1
	fi
	# Search for a mirror.
	if [ -z "$mirror" ]; then
		echo -e "$0: Can't find any mirror!"
		[ -e /etc/repoman.conf.pacnew ] && echo -e "$0: HINT: merge the contents of /etc/repoman.conf.pacnew to /etc/repoman.conf!"
		exit 1
	fi
	server="$mirror/_darcs/current/"
	mkdir -p $fst_root/$repo
	cd $fst_root/$repo
	echo "warning: this operation can take minutes, please be patient"
	syncstr=":: Synchronizing the Frugalware Source Tree... "
	if [ "$verbose" != 1 ]; then
		echo -n $syncstr
		rsync -azq $server ./
	else
		echo $syncstr
		rsync -azvP $server ./
	fi
	echo "done."
}

chk_updated()
{
	if [ ! -d $1 ]; then
		echo "ERROR: Could not find FrugalBuild scripts in $1"
		echo "       have you used 'repoman upd' yet?"
		exit 1
	fi
}

search()
{
	chk_updated $fst_root
	[ -z "$*" ] || grepcmd="|grep $*"
	eval "find $fst_root/$reponame/source -name FrugalBuild |xargs grep '\(options=(.*nobuild.*)\|^nobuild=\)' |sed 's|$fst_root/$reponame/source/\(.*\)/FrugalBuild:.*|\1|' $grepcmd"
}

merge()
{
	# sanility checks
	chk_updated $fst_root
	# install essential packages if necessary
	echo -n "checking for essential packages... "
	. /etc/makepkg.conf
	for i in "$COREPKGS"
	do
		missing="$missing `pacman -Sg $i |grep -v '^\w'` "
	done
	for i in `pacman -Q|sed 's/\([^ ]*\) .*/\1/'`
	do
		missing=`echo $missing |sed "s/\( \|^\)$i\( \|$\)/ /"`
	done
	if [ ! -z "$missing" ]; then
		echo "failed"
		echo "Use the following command to install the missing packages:"
		echo "pacman -S $missing"
		exit 1
	else
		echo "done"
	fi
	dir=`find $fst_root -type d -name "$1"|sed -n '$ p'`
	[ -z "$dir" ] && die "package '$1' not found"
	cd $dir
	makepkg $makepkg_opts
}

[ -e /etc/repoman.conf ] && . /etc/repoman.conf || \
	die "Can't find /etc/repoman.conf!"

# Initializating variables.
version='0.2.0'

# Checking for darcs.
which darcs >/dev/null 2>&1
if [ $? != 0 ]; then
	echo "ERROR: Can't find darcs. You can install it with pacman -S darcs."
	exit 1
fi

# Pharsing parameters.

if ! [ -z "$REPOMAN_LOGIN" ]; then
	lopts="-l $REPOMAN_LOGIN"
	cpopts="$REPOMAN_LOGIN@"
fi

if [ $# -le 0 ]; then
	usage
	exit 0
fi

while [ "$1" != "" ]; do
	case $1 in
		-h|--help)
			usage
			exit 0
		;;
		-v|--verbose)
			 verbose=1
		;;
		-t|--tree)
			shift 1
			path_to_repo=`echo $path_to_repo|sed "s/current/$1/"`
			reponame=`echo $reponame|sed "s/current/$1/"`
		;;
		-*)
			echo "Wrong parameter!"
			usage
			exit 1
		;;
		cl|changelog)
			shift 1
			changelog $*
		;;
		c|clean)
			shift 1
			clean $*
		;;
		del|delete)
			shift 1
			delete $*
		;;
		ls|list)
			shift 1
			list $*
			exit 0
		;;
		m|merge)
			shift 1
			merge $*
		;;
		up|upload)
			shift 1
			upload $*
		;;
		upd|update)
			shift 1
			update $*
		;;
		s|search)
			shift 1
			search $*
		;;
	esac
	shift 1
done

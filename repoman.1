.TH "REPOMAN" "1" "June 2007" "Frugalware 0.7" "pacman-tools"
.SH NAME
repoman \- Frugalware's program to maintain/build packages via ssh/rsync
.SH SYNOPSIS
\fBrepoman\fR [\fIglobal options\fR] [\fIcommand\fR] [\fIcommand options\fR]
.SH DESCRIPTION
.BR repoman
is meant for Frugalware developers to upload, delete or register source
tarballs or fpm packages.

Also it's a tool for users to automatically build and install packages on the
target host.

.SH INSTALLING PACKAGES
.BR Note:
This section is for users. If you're a developer, just skip it.

Here is a reference comparing pacman-g2 and repoman

.nf
pacman-g2 -Sy		repoman upd
pacman-g2 -S pkg	repoman merge pkg
pacman-g2 -Ss foo	repoman search foo
.fi

.SH USAGE
.BR Note:
This section is for developers. If you're a user, just skip it.

A typical package update should be done as follows:

.TP
0) Configure repoman:

.nf
echo 'current_servers=("foo@git.frugalware.org:/home/ftp/pub/frugalware/\\
frugalware-current")' > ~/.repoman.conf
echo 'fst_root=~/git' >> ~/.repoman.conf
.fi

Replace foo with your nick and make sure about you have the git tree in
~/git/current.

If you want to use more than one (conflicting, ie.: current and stable) trees,
then please add the <reponame>_pushonly=y option to each repo except one.
Example: if the host system is -current and you want to enabled current and
stable, then add stable_pushonly="y" to your config.

.TP
1) Get the repo and set defaults.

Example for the first time:

.nf
git clone foo@git.frugalware.org:/home/ftp/pub/frugalware/frugalware-current \\
current
.fi

( Example for the pacman-tools repo:

git clone foo@git.frugalware.org:/home/ftp/pub/other/pacman-tools/pacman-tools )

.nf
cd current
git config user.name yourname
git config user.email email@addr.ess
git config remote.origin.receivepack "sudo -u foo git-receive-pack"
.fi

Here you should substitute foo with the nick of the repo owner, currently vmiklos.

.TP
2) Update the repo.

If you already got the repo a simple 'git pull' should be enough.

.TP
3) Make changes and build the package.

Now time to edit the FrugalBuild and make changes.

Build the package with 'sudo makepkg -c'.

Then if you would like to add new file(s) to the source, run this:

git add glibc.install

To remove file(s) from the source, run this:

git rm at-3.1.8r11-makefile.patch

Or if you would like to rename a file in the source, run this:

git mv glibc-2.5-foo.patch glibc-2.5-bar.patch

.TP
4) Recording the changes.

Simply run 'git commit'.

When recording the patch (if this is a package upgrade), the first line must be
$pkgname-$pkgver-$pkgrel-$arch. You can use repoman rec which will fill in this
first line automatically for you.

For example:

glibc-2.5-1-i686

This is the same as the full package name without trailing .fpm.

.TP
5) Delete the old source package(s).

If you only do a rebuild, then, of course, skip this step. For example:

repoman del source/base/readline/readline-5.0.tar.gz

.TP
6) Push the FrugalBuild/.install/etc patch.

Here you only have to do a simple 'git push'.

This command uploads the changes you made locally to the server.

.TP
7) Upload the new source package(s).

If you only do a rebuild, then, of course, skip this step.

For example:

repoman up zsh-4.2.5.tar.bz2 /source/apps/zsh/

repoman up zsh-doc-4.2.5.tar.bz2 /source/apps/zsh/

NOTE: if the original mirror is fast, then just skip this step and repoman cl
(see later) will download the sources for you. If the mirror is slower than
your upload bandwidth then it worth to upload it now or you'll have to wait
till the server downloads it!

.TP
8) Upload the new fpm package:

For example (see the 'up' command description for more details!):

repoman up sendmail-8.13.4-2-i686.fpm frugalware-i686/

.TP
9) Delete the old fpm package.

For example:

repoman del frugalware-i686/glibc-2.5-1-i686.fpm

.TP
10) Generate a Changelog, update the .fdb and sql database, download the
missing sources and update documentation:

For example:

repoman cl perl

.TP
11) Once you understand this procedure, you can do all this at once:

For example:

repoman -k push

Will be interactive only in case there is some unrecorded change.

Usually I (vmiklos) use the following:

.nf
repoman rec
repoman -k push
.fi

But you should not use repoman push till you don't understand what it does!

.SH COMMANDS
.TP
.BI cl|changelog " [category/]package"
Generate a Changelog file from git log.
The category may be optional, but then a FrugalBuild must be supplied in the
current directory to determine the category.
.TP
.BI c|clean " package"
Wipes out a package from the package database (fdb).
.TP
.BI del|delete " file"
Delete a file from a repo.

Example: repoman del frugalware-i686/glibc-2.5-1-i686.fpm
.TP
.BI ls|list " directory [options]"
List the contents of a remote directory.

Example: repoman ls source/base/db/ -l
.TP
.BI m|merge " package"
Build a package from source and install it. You can configure the build
options in the makepkg_opts directive of /etc/repoman.conf.

By default repoman will install the missing dependencies with pacman-g2, clean up
the leftover work files, install the package, and write the resulting package
to the pacman-g2 package cache.

.TP
.BI rec|record " [parameters]"
A frontend to git commit. If parameters are given then it won't be interactive
and the parameters are appended to the history as a long comment.

.TP
.BI up|upload " source destination"
Upload a file to a repo.

Example: repoman up sendmail-8.13.4-2-i686.fpm frugalware-i686/
.TP
.BI upd|update
Update the repos listed in /etc/repoman.conf. If a repo does not
exist yet, then repoman will download it (it may take some time!).
If you want to blacklist a repo then add <reponame>_pushonly="y" to
/etc/repoman.d/<reponame>.

.TP
.BI s|search " [regexp]"
Search in those FrugalBuilds which are only available in source form. If the
optional regexp parameter omitted, it will list all source-only packages.

.SH OPTIONS
.TP
.B -d|--dry-run
Don't execute the commands in fact.
.TP
.B -h|--help
Show the help screen.
.TP
.B -v|--verbose
Give verbose output.
.TP
.B -t|--tree
Specify the source tree to use (ie. "current" or "stable", or "my_custom_repo").
.TP
.B -k
Don't be interactive.
.SH ENVIRONMENT
\fBrepoman\fR utilizes the following environment variable:
.PP
.Vb 2

arch                         Update different architecture of the .fdb
                             than repoman is running on.
.SH AUTHORS
Written by Miklos Vajna and Laszlo Dvornik.
.SH "REPORTING BUGS"
Please report bugs to the <http://bugs.frugalware.org/> bug tracking system.
.SH "SEE ALSO"
.BR git (7),
.BR pacman-g2 (8)

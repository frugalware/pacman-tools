#!/bin/bash

# Last modified: Tue, 15 Mar 2005 19:30:06 +0100
# (c) 2004 Vajna Miklos <mamajom@axelero.hu>
# checkworld for pacman
# distributed under GPL License

version=0.3
countpkg=0

echo "checkworld $version (C) 2004 Miklos Vajna <mamajom@axelero.hu>"

function usage()
{
	cat <<EOF
Usage: `basename $0` [options] [category1 category2] ...

Options:
-v	be verbose
-h	this help

if you defines categories, it doesn't check all categories
this should be run from the 'source' directory of FST
EOF
}

function check_category()
{
	i=$1
	cd $i
		for j in *
		do
			if [ -d $j ]; then
				cd $j
unset pkgname pkgver pkgrel pkgdesc url license groups provides md5sums force
unset replaces depends conflicts backup source install build makedepends
unset up2date realname extrapkgver m8r
					m8r=`grep '^# Maintainer:' FrugalBuild |sed 's/.*: \(.*\) <.*/\1/'`
					. FrugalBuild
					countpkg=$(($countpkg+1))
					echo "$up2date"|grep -q " " && up2date=`eval "$up2date"`
					if [ "$pkgver" != "$up2date" ]; then
						echo -n "Checking for $i/$j... "
						echo "$pkgver < $up2date, $m8r"
					else
						if [ "$verbose" == "1" ]; then
						echo -n "Checking for $i/$j... "
							echo "Passed"
						fi
					fi
				cd ..
			fi
		done
	cd ..

}

case $1 in
	-v)
		verbose=1
		shift 1
		;;
	-h)
		usage
		exit 1
		;;
esac

if [ `pwd|tr '/' '\n'|tail -n 1` != "source" ]; then
	echo "Where are you?"
	usage
	exit 1
fi

if [ $# -le 0 ]; then
	for i in *
	do
		if [ -d $i ]; then
			check_category $i
		fi
	done
else
	for i in $*
	do
		check_category $i
	done
fi

echo "Total packages checked: $countpkg. "

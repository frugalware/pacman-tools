#!/usr/bin/perl

use strict;
use warnings;
no warnings qw(uninitialized);
use LWP;
use LWP::UserAgent;
use Getopt::Std;

$Getopt::Std::STANDARD_HELP_VERSION = 1;
our $VERSION = "0.2";

sub HELP_MESSAGE(){
    print '
pud - up2date helper for Frugalware Linux
usage: pud -s URL -e PERL_REGEXP [-h] [-f format] [-t timeout]

 The _source_ of URL will be downloaded and the REGEXPs groups
 will be printed(up to nine), so do not forget to make one!
 with -f you can format the output as printf does.
 The default timeout is 600s.
 The page is treated as a multiline string.
 "http://" or "ftp://" prefix is mandatory.
 Always use \' or " opening and closing the regexp and format
 All these above could change(maybe not in a compatible way), 
 please note that!
 Ex:
  pud -s http://frugalware.org -e "&nbsp;frugalware-(.*?)<.*fwclose"
   should give you the current stable release of Frugalware Linux.
  pud -s ftp://frugalware.org/ -e \'(d*):(\d*) inc\' -f "%d-%d"
   should give a time

';
}

my %opts;
getopts('s:e:ht:f:', \%opts);

HELP_MESSAGE() && exit if $opts{h};
my $source = $opts{s} || do {HELP_MESSAGE; die 'No source!';};
my $regexp = $opts{e} || do {HELP_MESSAGE; die 'No regexp!';};
my $timeout = $opts{t} || 600;      ## default time is 600s
my $format = $opts{f};

sub get_source{
    my $source = shift;
    my $ua = LWP::UserAgent->new;
    $ua->timeout($timeout);
    my $response = $ua->get($source);
    if ($response->is_success) {
	return $response->content;
    }
    else {
	die $response->status_line;
    }
}

do {HELP_MESSAGE; die 'Unknown protocol!';} unless $source =~ m!^(?:ht|f)tp://!;

$regexp = qr/$regexp/;

if (get_source($source) =~ /$regexp/m){
    if ($format){
	printf $format, $1,$2,$3,$4,$5,$6,$7,$8,$9;
    } else {
	print "$1$2$3$4$5$6$7$8$9\n";
    }
}


